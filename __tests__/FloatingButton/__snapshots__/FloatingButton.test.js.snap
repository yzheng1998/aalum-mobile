// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FloatingButton renders children properly 1`] = `
<ThemeProvider
  theme={
    Object {
      "colors": Object {
        "black": "#4F4F4F",
        "border": "#BDBDBD",
        "buttonShadow1": "rgba(255, 255, 255, 0) ",
        "buttonShadow2": "rgba(249, 249, 249, 0.9)",
        "charcoal": "#333333",
        "darkGrey": "#8F8F8F",
        "darkShadow": "rgba(0,0,0,0.1)",
        "darkerGrey": "#828282",
        "error": "#DA2752",
        "gradientLeft": "#DA2752",
        "gradientRight": "#E935F8",
        "green": "#219653",
        "grey": "#A8A8A8",
        "inactiveText": "#ADADAD",
        "lightGrey": "#A0A0A0",
        "lightShadow": "rgba(0,0,0,0.16)",
        "offWhite": "#F9F9F9",
        "pureBlack": "#000000",
        "shadow": "rgba(0, 0, 0, 0.15)",
        "white": "#FFFFFF",
        "whiteGrey": "#E0E0E0",
      },
      "fonts": Object {
        "bodyText": "Avenir-Medium",
        "heading": "Montserrat-Bold",
        "title": "Avenir-Heavy",
      },
    }
  }
>
  <FloatingButton>
    <Styled(View)>
      <StyledNativeComponent
        forwardedClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "displayName": "Styled(View)",
            "inlineStyle": InlineStyle {
              "rules": Array [
                "
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
",
              ],
            },
            "render": [Function],
            "styledComponentId": "StyledNativeComponent",
            "target": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          }
        }
        forwardedRef={null}
      >
        <View
          style={
            Array [
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                },
              ]
            }
          >
            <LinearGradient
              colors={
                Array [
                  "rgba(255, 255, 255, 0) ",
                  "rgba(249, 249, 249, 0.9)",
                  "#F9F9F9",
                ]
              }
              end={
                Object {
                  "x": 0,
                  "y": 1,
                }
              }
              locations={
                Array [
                  0,
                  0.3415,
                  1,
                ]
              }
              start={
                Object {
                  "x": 0,
                  "y": 0,
                }
              }
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "justifyContent": "center",
                  "overflow": "hidden",
                }
              }
            >
              <_class
                colors={
                  Array [
                    16777215,
                    3875142137,
                    4294572537,
                  ]
                }
                endPoint={
                  Object {
                    "x": 0,
                    "y": 1,
                  }
                }
                locations={
                  Array [
                    0,
                    0.3415,
                    1,
                  ]
                }
                startPoint={
                  Object {
                    "x": 0,
                    "y": 0,
                  }
                }
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "justifyContent": "center",
                    "overflow": "hidden",
                  }
                }
              >
                <BVLinearGradient
                  colors={
                    Array [
                      16777215,
                      3875142137,
                      4294572537,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 0,
                      "y": 1,
                    }
                  }
                  locations={
                    Array [
                      0,
                      0.3415,
                      1,
                    ]
                  }
                  startPoint={
                    Object {
                      "x": 0,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "alignItems": "center",
                      "flex": 1,
                      "justifyContent": "center",
                      "overflow": "hidden",
                    }
                  }
                >
                  <Styled(View)>
                    <StyledNativeComponent
                      forwardedClass={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "displayName": "Styled(View)",
                          "inlineStyle": InlineStyle {
                            "rules": Array [
                              "
  width: 100%;
  margin-bottom: ",
                              "65.366",
                              ";
",
                            ],
                          },
                          "render": [Function],
                          "styledComponentId": "StyledNativeComponent",
                          "target": [Function],
                          "withComponent": [Function],
                          Symbol(Symbol.hasInstance): [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "marginBottom": 65.366,
                              "width": "100%",
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "marginBottom": 65.366,
                                "width": "100%",
                              },
                            ]
                          }
                        >
                          <Button>
                            <StyledNativeComponent
                              forwardedClass={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "displayName": "Button",
                                  "getDefaultProps": [Function],
                                  "inlineStyle": InlineStyle {
                                    "rules": Array [
                                      "
  justify-content: center;
  margin-left: 32px;
  margin-right: 32px;
  height: 60px;
  box-shadow: 0px 6px 25px ",
                                      "rgba(0, 0, 0, 0.15)",
                                      ";
",
                                    ],
                                  },
                                  "render": [Function],
                                  "styledComponentId": "StyledNativeComponent",
                                  "target": [Function],
                                  "withComponent": [Function],
                                  Symbol(Symbol.hasInstance): [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <TouchableOpacity
                                activeOpacity={0.2}
                                style={
                                  Array [
                                    Object {
                                      "height": 60,
                                      "justifyContent": "center",
                                      "marginLeft": 32,
                                      "marginRight": 32,
                                      "shadowColor": "rgba(0, 0, 0, 0.15)",
                                      "shadowOffset": Object {
                                        "height": 6,
                                        "width": 0,
                                      },
                                      "shadowOpacity": 1,
                                      "shadowRadius": 25,
                                    },
                                  ]
                                }
                              >
                                <AnimatedComponent
                                  accessible={true}
                                  isTVSelectable={true}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    Array [
                                      Array [
                                        Object {
                                          "height": 60,
                                          "justifyContent": "center",
                                          "marginLeft": 32,
                                          "marginRight": 32,
                                          "shadowColor": "rgba(0, 0, 0, 0.15)",
                                          "shadowOffset": Object {
                                            "height": 6,
                                            "width": 0,
                                          },
                                          "shadowOpacity": 1,
                                          "shadowRadius": 25,
                                        },
                                      ],
                                      Object {
                                        "opacity": 1,
                                      },
                                    ]
                                  }
                                >
                                  <View
                                    accessible={true}
                                    isTVSelectable={true}
                                    onResponderGrant={[Function]}
                                    onResponderMove={[Function]}
                                    onResponderRelease={[Function]}
                                    onResponderTerminate={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    style={
                                      Object {
                                        "height": 60,
                                        "justifyContent": "center",
                                        "marginLeft": 32,
                                        "marginRight": 32,
                                        "opacity": 1,
                                        "shadowColor": "rgba(0, 0, 0, 0.15)",
                                        "shadowOffset": Object {
                                          "height": 6,
                                          "width": 0,
                                        },
                                        "shadowOpacity": 1,
                                        "shadowRadius": 25,
                                      }
                                    }
                                  >
                                    <View
                                      accessible={true}
                                      isTVSelectable={true}
                                      onResponderGrant={[Function]}
                                      onResponderMove={[Function]}
                                      onResponderRelease={[Function]}
                                      onResponderTerminate={[Function]}
                                      onResponderTerminationRequest={[Function]}
                                      onStartShouldSetResponder={[Function]}
                                      style={
                                        Object {
                                          "height": 60,
                                          "justifyContent": "center",
                                          "marginLeft": 32,
                                          "marginRight": 32,
                                          "opacity": 1,
                                          "shadowColor": "rgba(0, 0, 0, 0.15)",
                                          "shadowOffset": Object {
                                            "height": 6,
                                            "width": 0,
                                          },
                                          "shadowOpacity": 1,
                                          "shadowRadius": 25,
                                        }
                                      }
                                    >
                                      <LinearGradient
                                        colors={
                                          Array [
                                            "#DA2752",
                                            "#E935F8",
                                          ]
                                        }
                                        end={
                                          Object {
                                            "x": 1,
                                            "y": 0,
                                          }
                                        }
                                        start={
                                          Object {
                                            "x": 0,
                                            "y": 0,
                                          }
                                        }
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "borderRadius": 30,
                                            "flex": 1,
                                            "flexDirection": "row",
                                            "justifyContent": "center",
                                            "opacity": 1,
                                            "overflow": "hidden",
                                          }
                                        }
                                      >
                                        <_class
                                          colors={
                                            Array [
                                              4292486994,
                                              4293473784,
                                            ]
                                          }
                                          endPoint={
                                            Object {
                                              "x": 1,
                                              "y": 0,
                                            }
                                          }
                                          locations={null}
                                          startPoint={
                                            Object {
                                              "x": 0,
                                              "y": 0,
                                            }
                                          }
                                          style={
                                            Object {
                                              "alignItems": "center",
                                              "borderRadius": 30,
                                              "flex": 1,
                                              "flexDirection": "row",
                                              "justifyContent": "center",
                                              "opacity": 1,
                                              "overflow": "hidden",
                                            }
                                          }
                                        >
                                          <BVLinearGradient
                                            colors={
                                              Array [
                                                4292486994,
                                                4293473784,
                                              ]
                                            }
                                            endPoint={
                                              Object {
                                                "x": 1,
                                                "y": 0,
                                              }
                                            }
                                            locations={null}
                                            startPoint={
                                              Object {
                                                "x": 0,
                                                "y": 0,
                                              }
                                            }
                                            style={
                                              Object {
                                                "alignItems": "center",
                                                "borderRadius": 30,
                                                "flex": 1,
                                                "flexDirection": "row",
                                                "justifyContent": "center",
                                                "opacity": 1,
                                                "overflow": "hidden",
                                              }
                                            }
                                          >
                                            <MockChild>
                                              <StyledNativeComponent
                                                forwardedClass={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "displayName": "MockChild",
                                                    "inlineStyle": InlineStyle {
                                                      "rules": Array [],
                                                    },
                                                    "render": [Function],
                                                    "styledComponentId": "StyledNativeComponent",
                                                    "target": [Function],
                                                    "withComponent": [Function],
                                                    Symbol(Symbol.hasInstance): [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <View
                                                  style={
                                                    Array [
                                                      Object {},
                                                    ]
                                                  }
                                                >
                                                  <View
                                                    style={
                                                      Array [
                                                        Object {},
                                                      ]
                                                    }
                                                  />
                                                </View>
                                              </StyledNativeComponent>
                                            </MockChild>
                                            <Styled(Text)>
                                              <StyledNativeComponent
                                                forwardedClass={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "displayName": "Styled(Text)",
                                                    "inlineStyle": InlineStyle {
                                                      "rules": Array [
                                                        "
  font-family: ",
                                                        "Avenir-Heavy",
                                                        ";
  color: ",
                                                        "#FFFFFF",
                                                        ";
  font-size: 20px;
",
                                                      ],
                                                    },
                                                    "propTypes": Object {
                                                      "accessible": [Function],
                                                      "adjustsFontSizeToFit": [Function],
                                                      "allowFontScaling": [Function],
                                                      "disabled": [Function],
                                                      "ellipsizeMode": [Function],
                                                      "minimumFontScale": [Function],
                                                      "nativeID": [Function],
                                                      "numberOfLines": [Function],
                                                      "onLayout": [Function],
                                                      "onLongPress": [Function],
                                                      "onPress": [Function],
                                                      "pressRetentionOffset": [Function],
                                                      "selectable": [Function],
                                                      "selectionColor": [Function],
                                                      "style": [Function],
                                                      "suppressHighlighting": [Function],
                                                      "testID": [Function],
                                                      "textBreakStrategy": [Function],
                                                    },
                                                    "render": [Function],
                                                    "styledComponentId": "StyledNativeComponent",
                                                    "target": [Function],
                                                    "withComponent": [Function],
                                                    Symbol(Symbol.hasInstance): [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <Text
                                                  style={
                                                    Array [
                                                      Object {
                                                        "color": "#FFFFFF",
                                                        "fontFamily": "Avenir-Heavy",
                                                        "fontSize": 20,
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <Text
                                                    style={
                                                      Array [
                                                        Object {
                                                          "color": "#FFFFFF",
                                                          "fontFamily": "Avenir-Heavy",
                                                          "fontSize": 20,
                                                        },
                                                      ]
                                                    }
                                                  />
                                                </Text>
                                              </StyledNativeComponent>
                                            </Styled(Text)>
                                          </BVLinearGradient>
                                        </_class>
                                      </LinearGradient>
                                    </View>
                                  </View>
                                </AnimatedComponent>
                              </TouchableOpacity>
                            </StyledNativeComponent>
                          </Button>
                        </View>
                      </View>
                    </StyledNativeComponent>
                  </Styled(View)>
                </BVLinearGradient>
              </_class>
            </LinearGradient>
          </View>
        </View>
      </StyledNativeComponent>
    </Styled(View)>
  </FloatingButton>
</ThemeProvider>
`;

exports[`FloatingButton renders correctly 1`] = `
<ThemeProvider
  theme={
    Object {
      "colors": Object {
        "black": "#4F4F4F",
        "border": "#BDBDBD",
        "buttonShadow1": "rgba(255, 255, 255, 0) ",
        "buttonShadow2": "rgba(249, 249, 249, 0.9)",
        "charcoal": "#333333",
        "darkGrey": "#8F8F8F",
        "darkShadow": "rgba(0,0,0,0.1)",
        "darkerGrey": "#828282",
        "error": "#DA2752",
        "gradientLeft": "#DA2752",
        "gradientRight": "#E935F8",
        "green": "#219653",
        "grey": "#A8A8A8",
        "inactiveText": "#ADADAD",
        "lightGrey": "#A0A0A0",
        "lightShadow": "rgba(0,0,0,0.16)",
        "offWhite": "#F9F9F9",
        "pureBlack": "#000000",
        "shadow": "rgba(0, 0, 0, 0.15)",
        "white": "#FFFFFF",
        "whiteGrey": "#E0E0E0",
      },
      "fonts": Object {
        "bodyText": "Avenir-Medium",
        "heading": "Montserrat-Bold",
        "title": "Avenir-Heavy",
      },
    }
  }
>
  <FloatingButton>
    <Styled(View)>
      <StyledNativeComponent
        forwardedClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "displayName": "Styled(View)",
            "inlineStyle": InlineStyle {
              "rules": Array [
                "
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
",
              ],
            },
            "render": [Function],
            "styledComponentId": "StyledNativeComponent",
            "target": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          }
        }
        forwardedRef={null}
      >
        <View
          style={
            Array [
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                },
              ]
            }
          >
            <LinearGradient
              colors={
                Array [
                  "rgba(255, 255, 255, 0) ",
                  "rgba(249, 249, 249, 0.9)",
                  "#F9F9F9",
                ]
              }
              end={
                Object {
                  "x": 0,
                  "y": 1,
                }
              }
              locations={
                Array [
                  0,
                  0.3415,
                  1,
                ]
              }
              start={
                Object {
                  "x": 0,
                  "y": 0,
                }
              }
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "justifyContent": "center",
                  "overflow": "hidden",
                }
              }
            >
              <_class
                colors={
                  Array [
                    16777215,
                    3875142137,
                    4294572537,
                  ]
                }
                endPoint={
                  Object {
                    "x": 0,
                    "y": 1,
                  }
                }
                locations={
                  Array [
                    0,
                    0.3415,
                    1,
                  ]
                }
                startPoint={
                  Object {
                    "x": 0,
                    "y": 0,
                  }
                }
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "justifyContent": "center",
                    "overflow": "hidden",
                  }
                }
              >
                <BVLinearGradient
                  colors={
                    Array [
                      16777215,
                      3875142137,
                      4294572537,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 0,
                      "y": 1,
                    }
                  }
                  locations={
                    Array [
                      0,
                      0.3415,
                      1,
                    ]
                  }
                  startPoint={
                    Object {
                      "x": 0,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "alignItems": "center",
                      "flex": 1,
                      "justifyContent": "center",
                      "overflow": "hidden",
                    }
                  }
                >
                  <Styled(View)>
                    <StyledNativeComponent
                      forwardedClass={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "displayName": "Styled(View)",
                          "inlineStyle": InlineStyle {
                            "rules": Array [
                              "
  width: 100%;
  margin-bottom: ",
                              "65.366",
                              ";
",
                            ],
                          },
                          "render": [Function],
                          "styledComponentId": "StyledNativeComponent",
                          "target": [Function],
                          "withComponent": [Function],
                          Symbol(Symbol.hasInstance): [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "marginBottom": 65.366,
                              "width": "100%",
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "marginBottom": 65.366,
                                "width": "100%",
                              },
                            ]
                          }
                        >
                          <Button>
                            <StyledNativeComponent
                              forwardedClass={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "displayName": "Button",
                                  "getDefaultProps": [Function],
                                  "inlineStyle": InlineStyle {
                                    "rules": Array [
                                      "
  justify-content: center;
  margin-left: 32px;
  margin-right: 32px;
  height: 60px;
  box-shadow: 0px 6px 25px ",
                                      "rgba(0, 0, 0, 0.15)",
                                      ";
",
                                    ],
                                  },
                                  "render": [Function],
                                  "styledComponentId": "StyledNativeComponent",
                                  "target": [Function],
                                  "withComponent": [Function],
                                  Symbol(Symbol.hasInstance): [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <TouchableOpacity
                                activeOpacity={0.2}
                                style={
                                  Array [
                                    Object {
                                      "height": 60,
                                      "justifyContent": "center",
                                      "marginLeft": 32,
                                      "marginRight": 32,
                                      "shadowColor": "rgba(0, 0, 0, 0.15)",
                                      "shadowOffset": Object {
                                        "height": 6,
                                        "width": 0,
                                      },
                                      "shadowOpacity": 1,
                                      "shadowRadius": 25,
                                    },
                                  ]
                                }
                              >
                                <AnimatedComponent
                                  accessible={true}
                                  isTVSelectable={true}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    Array [
                                      Array [
                                        Object {
                                          "height": 60,
                                          "justifyContent": "center",
                                          "marginLeft": 32,
                                          "marginRight": 32,
                                          "shadowColor": "rgba(0, 0, 0, 0.15)",
                                          "shadowOffset": Object {
                                            "height": 6,
                                            "width": 0,
                                          },
                                          "shadowOpacity": 1,
                                          "shadowRadius": 25,
                                        },
                                      ],
                                      Object {
                                        "opacity": 1,
                                      },
                                    ]
                                  }
                                >
                                  <View
                                    accessible={true}
                                    isTVSelectable={true}
                                    onResponderGrant={[Function]}
                                    onResponderMove={[Function]}
                                    onResponderRelease={[Function]}
                                    onResponderTerminate={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    style={
                                      Object {
                                        "height": 60,
                                        "justifyContent": "center",
                                        "marginLeft": 32,
                                        "marginRight": 32,
                                        "opacity": 1,
                                        "shadowColor": "rgba(0, 0, 0, 0.15)",
                                        "shadowOffset": Object {
                                          "height": 6,
                                          "width": 0,
                                        },
                                        "shadowOpacity": 1,
                                        "shadowRadius": 25,
                                      }
                                    }
                                  >
                                    <View
                                      accessible={true}
                                      isTVSelectable={true}
                                      onResponderGrant={[Function]}
                                      onResponderMove={[Function]}
                                      onResponderRelease={[Function]}
                                      onResponderTerminate={[Function]}
                                      onResponderTerminationRequest={[Function]}
                                      onStartShouldSetResponder={[Function]}
                                      style={
                                        Object {
                                          "height": 60,
                                          "justifyContent": "center",
                                          "marginLeft": 32,
                                          "marginRight": 32,
                                          "opacity": 1,
                                          "shadowColor": "rgba(0, 0, 0, 0.15)",
                                          "shadowOffset": Object {
                                            "height": 6,
                                            "width": 0,
                                          },
                                          "shadowOpacity": 1,
                                          "shadowRadius": 25,
                                        }
                                      }
                                    >
                                      <LinearGradient
                                        colors={
                                          Array [
                                            "#DA2752",
                                            "#E935F8",
                                          ]
                                        }
                                        end={
                                          Object {
                                            "x": 1,
                                            "y": 0,
                                          }
                                        }
                                        start={
                                          Object {
                                            "x": 0,
                                            "y": 0,
                                          }
                                        }
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "borderRadius": 30,
                                            "flex": 1,
                                            "flexDirection": "row",
                                            "justifyContent": "center",
                                            "opacity": 1,
                                            "overflow": "hidden",
                                          }
                                        }
                                      >
                                        <_class
                                          colors={
                                            Array [
                                              4292486994,
                                              4293473784,
                                            ]
                                          }
                                          endPoint={
                                            Object {
                                              "x": 1,
                                              "y": 0,
                                            }
                                          }
                                          locations={null}
                                          startPoint={
                                            Object {
                                              "x": 0,
                                              "y": 0,
                                            }
                                          }
                                          style={
                                            Object {
                                              "alignItems": "center",
                                              "borderRadius": 30,
                                              "flex": 1,
                                              "flexDirection": "row",
                                              "justifyContent": "center",
                                              "opacity": 1,
                                              "overflow": "hidden",
                                            }
                                          }
                                        >
                                          <BVLinearGradient
                                            colors={
                                              Array [
                                                4292486994,
                                                4293473784,
                                              ]
                                            }
                                            endPoint={
                                              Object {
                                                "x": 1,
                                                "y": 0,
                                              }
                                            }
                                            locations={null}
                                            startPoint={
                                              Object {
                                                "x": 0,
                                                "y": 0,
                                              }
                                            }
                                            style={
                                              Object {
                                                "alignItems": "center",
                                                "borderRadius": 30,
                                                "flex": 1,
                                                "flexDirection": "row",
                                                "justifyContent": "center",
                                                "opacity": 1,
                                                "overflow": "hidden",
                                              }
                                            }
                                          >
                                            <Styled(Text)>
                                              <StyledNativeComponent
                                                forwardedClass={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "displayName": "Styled(Text)",
                                                    "inlineStyle": InlineStyle {
                                                      "rules": Array [
                                                        "
  font-family: ",
                                                        "Avenir-Heavy",
                                                        ";
  color: ",
                                                        "#FFFFFF",
                                                        ";
  font-size: 20px;
",
                                                      ],
                                                    },
                                                    "propTypes": Object {
                                                      "accessible": [Function],
                                                      "adjustsFontSizeToFit": [Function],
                                                      "allowFontScaling": [Function],
                                                      "disabled": [Function],
                                                      "ellipsizeMode": [Function],
                                                      "minimumFontScale": [Function],
                                                      "nativeID": [Function],
                                                      "numberOfLines": [Function],
                                                      "onLayout": [Function],
                                                      "onLongPress": [Function],
                                                      "onPress": [Function],
                                                      "pressRetentionOffset": [Function],
                                                      "selectable": [Function],
                                                      "selectionColor": [Function],
                                                      "style": [Function],
                                                      "suppressHighlighting": [Function],
                                                      "testID": [Function],
                                                      "textBreakStrategy": [Function],
                                                    },
                                                    "render": [Function],
                                                    "styledComponentId": "StyledNativeComponent",
                                                    "target": [Function],
                                                    "withComponent": [Function],
                                                    Symbol(Symbol.hasInstance): [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <Text
                                                  style={
                                                    Array [
                                                      Object {
                                                        "color": "#FFFFFF",
                                                        "fontFamily": "Avenir-Heavy",
                                                        "fontSize": 20,
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <Text
                                                    style={
                                                      Array [
                                                        Object {
                                                          "color": "#FFFFFF",
                                                          "fontFamily": "Avenir-Heavy",
                                                          "fontSize": 20,
                                                        },
                                                      ]
                                                    }
                                                  />
                                                </Text>
                                              </StyledNativeComponent>
                                            </Styled(Text)>
                                          </BVLinearGradient>
                                        </_class>
                                      </LinearGradient>
                                    </View>
                                  </View>
                                </AnimatedComponent>
                              </TouchableOpacity>
                            </StyledNativeComponent>
                          </Button>
                        </View>
                      </View>
                    </StyledNativeComponent>
                  </Styled(View)>
                </BVLinearGradient>
              </_class>
            </LinearGradient>
          </View>
        </View>
      </StyledNativeComponent>
    </Styled(View)>
  </FloatingButton>
</ThemeProvider>
`;

exports[`FloatingButton renders correctly 2`] = `
<ThemeProvider
  disabled={true}
  theme={
    Object {
      "colors": Object {
        "black": "#4F4F4F",
        "border": "#BDBDBD",
        "buttonShadow1": "rgba(255, 255, 255, 0) ",
        "buttonShadow2": "rgba(249, 249, 249, 0.9)",
        "charcoal": "#333333",
        "darkGrey": "#8F8F8F",
        "darkShadow": "rgba(0,0,0,0.1)",
        "darkerGrey": "#828282",
        "error": "#DA2752",
        "gradientLeft": "#DA2752",
        "gradientRight": "#E935F8",
        "green": "#219653",
        "grey": "#A8A8A8",
        "inactiveText": "#ADADAD",
        "lightGrey": "#A0A0A0",
        "lightShadow": "rgba(0,0,0,0.16)",
        "offWhite": "#F9F9F9",
        "pureBlack": "#000000",
        "shadow": "rgba(0, 0, 0, 0.15)",
        "white": "#FFFFFF",
        "whiteGrey": "#E0E0E0",
      },
      "fonts": Object {
        "bodyText": "Avenir-Medium",
        "heading": "Montserrat-Bold",
        "title": "Avenir-Heavy",
      },
    }
  }
  title="title"
>
  <FloatingButton>
    <Styled(View)>
      <StyledNativeComponent
        forwardedClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "displayName": "Styled(View)",
            "inlineStyle": InlineStyle {
              "rules": Array [
                "
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
",
              ],
            },
            "render": [Function],
            "styledComponentId": "StyledNativeComponent",
            "target": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          }
        }
        forwardedRef={null}
      >
        <View
          style={
            Array [
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                },
              ]
            }
          >
            <LinearGradient
              colors={
                Array [
                  "rgba(255, 255, 255, 0) ",
                  "rgba(249, 249, 249, 0.9)",
                  "#F9F9F9",
                ]
              }
              end={
                Object {
                  "x": 0,
                  "y": 1,
                }
              }
              locations={
                Array [
                  0,
                  0.3415,
                  1,
                ]
              }
              start={
                Object {
                  "x": 0,
                  "y": 0,
                }
              }
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "justifyContent": "center",
                  "overflow": "hidden",
                }
              }
            >
              <_class
                colors={
                  Array [
                    16777215,
                    3875142137,
                    4294572537,
                  ]
                }
                endPoint={
                  Object {
                    "x": 0,
                    "y": 1,
                  }
                }
                locations={
                  Array [
                    0,
                    0.3415,
                    1,
                  ]
                }
                startPoint={
                  Object {
                    "x": 0,
                    "y": 0,
                  }
                }
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "justifyContent": "center",
                    "overflow": "hidden",
                  }
                }
              >
                <BVLinearGradient
                  colors={
                    Array [
                      16777215,
                      3875142137,
                      4294572537,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 0,
                      "y": 1,
                    }
                  }
                  locations={
                    Array [
                      0,
                      0.3415,
                      1,
                    ]
                  }
                  startPoint={
                    Object {
                      "x": 0,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "alignItems": "center",
                      "flex": 1,
                      "justifyContent": "center",
                      "overflow": "hidden",
                    }
                  }
                >
                  <Styled(View)>
                    <StyledNativeComponent
                      forwardedClass={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "displayName": "Styled(View)",
                          "inlineStyle": InlineStyle {
                            "rules": Array [
                              "
  width: 100%;
  margin-bottom: ",
                              "65.366",
                              ";
",
                            ],
                          },
                          "render": [Function],
                          "styledComponentId": "StyledNativeComponent",
                          "target": [Function],
                          "withComponent": [Function],
                          Symbol(Symbol.hasInstance): [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "marginBottom": 65.366,
                              "width": "100%",
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "marginBottom": 65.366,
                                "width": "100%",
                              },
                            ]
                          }
                        >
                          <Button>
                            <StyledNativeComponent
                              forwardedClass={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "displayName": "Button",
                                  "getDefaultProps": [Function],
                                  "inlineStyle": InlineStyle {
                                    "rules": Array [
                                      "
  justify-content: center;
  margin-left: 32px;
  margin-right: 32px;
  height: 60px;
  box-shadow: 0px 6px 25px ",
                                      "rgba(0, 0, 0, 0.15)",
                                      ";
",
                                    ],
                                  },
                                  "render": [Function],
                                  "styledComponentId": "StyledNativeComponent",
                                  "target": [Function],
                                  "withComponent": [Function],
                                  Symbol(Symbol.hasInstance): [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <TouchableOpacity
                                activeOpacity={0.2}
                                style={
                                  Array [
                                    Object {
                                      "height": 60,
                                      "justifyContent": "center",
                                      "marginLeft": 32,
                                      "marginRight": 32,
                                      "shadowColor": "rgba(0, 0, 0, 0.15)",
                                      "shadowOffset": Object {
                                        "height": 6,
                                        "width": 0,
                                      },
                                      "shadowOpacity": 1,
                                      "shadowRadius": 25,
                                    },
                                  ]
                                }
                              >
                                <AnimatedComponent
                                  accessible={true}
                                  isTVSelectable={true}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    Array [
                                      Array [
                                        Object {
                                          "height": 60,
                                          "justifyContent": "center",
                                          "marginLeft": 32,
                                          "marginRight": 32,
                                          "shadowColor": "rgba(0, 0, 0, 0.15)",
                                          "shadowOffset": Object {
                                            "height": 6,
                                            "width": 0,
                                          },
                                          "shadowOpacity": 1,
                                          "shadowRadius": 25,
                                        },
                                      ],
                                      Object {
                                        "opacity": 1,
                                      },
                                    ]
                                  }
                                >
                                  <View
                                    accessible={true}
                                    isTVSelectable={true}
                                    onResponderGrant={[Function]}
                                    onResponderMove={[Function]}
                                    onResponderRelease={[Function]}
                                    onResponderTerminate={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    style={
                                      Object {
                                        "height": 60,
                                        "justifyContent": "center",
                                        "marginLeft": 32,
                                        "marginRight": 32,
                                        "opacity": 1,
                                        "shadowColor": "rgba(0, 0, 0, 0.15)",
                                        "shadowOffset": Object {
                                          "height": 6,
                                          "width": 0,
                                        },
                                        "shadowOpacity": 1,
                                        "shadowRadius": 25,
                                      }
                                    }
                                  >
                                    <View
                                      accessible={true}
                                      isTVSelectable={true}
                                      onResponderGrant={[Function]}
                                      onResponderMove={[Function]}
                                      onResponderRelease={[Function]}
                                      onResponderTerminate={[Function]}
                                      onResponderTerminationRequest={[Function]}
                                      onStartShouldSetResponder={[Function]}
                                      style={
                                        Object {
                                          "height": 60,
                                          "justifyContent": "center",
                                          "marginLeft": 32,
                                          "marginRight": 32,
                                          "opacity": 1,
                                          "shadowColor": "rgba(0, 0, 0, 0.15)",
                                          "shadowOffset": Object {
                                            "height": 6,
                                            "width": 0,
                                          },
                                          "shadowOpacity": 1,
                                          "shadowRadius": 25,
                                        }
                                      }
                                    >
                                      <LinearGradient
                                        colors={
                                          Array [
                                            "#DA2752",
                                            "#E935F8",
                                          ]
                                        }
                                        end={
                                          Object {
                                            "x": 1,
                                            "y": 0,
                                          }
                                        }
                                        start={
                                          Object {
                                            "x": 0,
                                            "y": 0,
                                          }
                                        }
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "borderRadius": 30,
                                            "flex": 1,
                                            "flexDirection": "row",
                                            "justifyContent": "center",
                                            "opacity": 1,
                                            "overflow": "hidden",
                                          }
                                        }
                                      >
                                        <_class
                                          colors={
                                            Array [
                                              4292486994,
                                              4293473784,
                                            ]
                                          }
                                          endPoint={
                                            Object {
                                              "x": 1,
                                              "y": 0,
                                            }
                                          }
                                          locations={null}
                                          startPoint={
                                            Object {
                                              "x": 0,
                                              "y": 0,
                                            }
                                          }
                                          style={
                                            Object {
                                              "alignItems": "center",
                                              "borderRadius": 30,
                                              "flex": 1,
                                              "flexDirection": "row",
                                              "justifyContent": "center",
                                              "opacity": 1,
                                              "overflow": "hidden",
                                            }
                                          }
                                        >
                                          <BVLinearGradient
                                            colors={
                                              Array [
                                                4292486994,
                                                4293473784,
                                              ]
                                            }
                                            endPoint={
                                              Object {
                                                "x": 1,
                                                "y": 0,
                                              }
                                            }
                                            locations={null}
                                            startPoint={
                                              Object {
                                                "x": 0,
                                                "y": 0,
                                              }
                                            }
                                            style={
                                              Object {
                                                "alignItems": "center",
                                                "borderRadius": 30,
                                                "flex": 1,
                                                "flexDirection": "row",
                                                "justifyContent": "center",
                                                "opacity": 1,
                                                "overflow": "hidden",
                                              }
                                            }
                                          >
                                            <Styled(Text)>
                                              <StyledNativeComponent
                                                forwardedClass={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "displayName": "Styled(Text)",
                                                    "inlineStyle": InlineStyle {
                                                      "rules": Array [
                                                        "
  font-family: ",
                                                        "Avenir-Heavy",
                                                        ";
  color: ",
                                                        "#FFFFFF",
                                                        ";
  font-size: 20px;
",
                                                      ],
                                                    },
                                                    "propTypes": Object {
                                                      "accessible": [Function],
                                                      "adjustsFontSizeToFit": [Function],
                                                      "allowFontScaling": [Function],
                                                      "disabled": [Function],
                                                      "ellipsizeMode": [Function],
                                                      "minimumFontScale": [Function],
                                                      "nativeID": [Function],
                                                      "numberOfLines": [Function],
                                                      "onLayout": [Function],
                                                      "onLongPress": [Function],
                                                      "onPress": [Function],
                                                      "pressRetentionOffset": [Function],
                                                      "selectable": [Function],
                                                      "selectionColor": [Function],
                                                      "style": [Function],
                                                      "suppressHighlighting": [Function],
                                                      "testID": [Function],
                                                      "textBreakStrategy": [Function],
                                                    },
                                                    "render": [Function],
                                                    "styledComponentId": "StyledNativeComponent",
                                                    "target": [Function],
                                                    "withComponent": [Function],
                                                    Symbol(Symbol.hasInstance): [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <Text
                                                  style={
                                                    Array [
                                                      Object {
                                                        "color": "#FFFFFF",
                                                        "fontFamily": "Avenir-Heavy",
                                                        "fontSize": 20,
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <Text
                                                    style={
                                                      Array [
                                                        Object {
                                                          "color": "#FFFFFF",
                                                          "fontFamily": "Avenir-Heavy",
                                                          "fontSize": 20,
                                                        },
                                                      ]
                                                    }
                                                  />
                                                </Text>
                                              </StyledNativeComponent>
                                            </Styled(Text)>
                                          </BVLinearGradient>
                                        </_class>
                                      </LinearGradient>
                                    </View>
                                  </View>
                                </AnimatedComponent>
                              </TouchableOpacity>
                            </StyledNativeComponent>
                          </Button>
                        </View>
                      </View>
                    </StyledNativeComponent>
                  </Styled(View)>
                </BVLinearGradient>
              </_class>
            </LinearGradient>
          </View>
        </View>
      </StyledNativeComponent>
    </Styled(View)>
  </FloatingButton>
</ThemeProvider>
`;
